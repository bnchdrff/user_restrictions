<?php
// $Id$

class UserRestrictionsTestCase extends DrupalWebTestCase {
  protected function addMask($mask, $type, $status = 0) {
    db_query(
      "INSERT INTO {user_restrictions} (mask, type, status) VALUES ('%s', %d, %d)",
      $mask, $type, $status
    );
  }

  public static function getInfo() {
    return array(
      'name' => t('User restrictions'),
      'description' => t('Assure that negative and positive access rules behave as designed.'),
      'group' => 'User restrictions'
    );
  }

  function setUp() {
    parent::setUp('user_restrictions');
  }

  function testAccess() {
    // To avoid conflicts with non allowed account creations.
    variable_set('user_register', 1);

    $this->addMask('simpletest_block%', USER_RESTRICTIONS_USERNAME);
    $this->addMask('simpletest_block_allow%', USER_RESTRICTIONS_USERNAME, 1);

    // First try blocked user.
    $name = 'simpletest_block_' . $this->randomName(6);
    $mail = "$name@example.com";
    $edit = array('name' => $name, 'mail' => $mail);

    $this->drupalPost('user/register', $edit, t('Create new account'));

    $this->assertNoText(
      t('Your password and further instructions have been sent to your e-mail address.'),
      t('User has been blocked.')
    );
    $this->assertText(
      t('The name @name has been denied access.', array('@name' => $name)),
      t('The user has been blocked.')
    );

    // Now try allowed user.
    $name = 'simpletest_block_allow_' . $this->randomName(6);
    $mail = "$name@example.com";
    $edit = array('name' => $name, 'mail' => $mail);

    $this->drupalPost('user/register', $edit, t('Create new account'));

    $this->assertText(
      t('Your password and further instructions have been sent to your e-mail address.'),
      t('The user has not been blocked.')
    );
    $this->assertNoText(
      t('The name @name has been denied access.', array('@name' => $name)),
      t('The user has not been blocked.')
    );

    $user = user_load($edit);

    $this->assertTrue(isset($user->uid), t('user->uid is set.'));
    $this->assertTrue(($user->uid > 0), t('The user ID is greater than zero.'));
  }
}
